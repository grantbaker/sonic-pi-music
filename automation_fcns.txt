define :play_seqs_r_oa do |notes, rhythm, releases, offset, amp|
  notes.each do |i|
    play i+offset,
      amp: amp,
      release: releases.ring.tick(:release)
    sleep rhythm.ring.tick(:rhythm)
  end
end

define :play_seqs_r do |notes, rhythm, releases|
  play_seqs_r_oa notes, rhythm, releases, 0, 1
end

define :play_seqs_ar_oa do |notes, rhythm, attacks, releases, offset, amp|
  notes.each do |i|
    play i+offset,
      amp: amp,
      attack: attacks.ring.tick(:attack),
      release: releases.ring.tick(:release)
    sleep rhythm.ring.tick(:rhythm)
  end
end

define :play_seqs_ar do |notes, rhythm, attacks, releases|
  play_seqs_ar_oa notes, rhythm, attacks, releases, 0, 1
end

define :play_seqs_asr_oa do |notes, rhythm, attacks, sustains, releases, offset, amp|
  notes.each do |i|
    play i+offset,
      amp: amp,
      attack: attacks.ring.tick(:attack),
      sustain: sustains.ring.tick(:sustain),
      release: releases.ring.tick(:release)
    sleep rhythm.ring.tick(:rhythm)
  end
end

define :play_seqs_asr do |notes, rhythm, attacks, sustains, releases|
  play_seqs_ar_oa notes, rhythm, attacks, sustains, releases, 0, 1
end

define :play_seqs_adsr_oa do |notes, rhythm, attacks, decays, sustains, releases, offset, amp|
  notes.each do |i|
    play i+offset,
      amp: amp,
      attack: attacks.ring.tick(:attack),
      decay: decays.ring.rick(:decay),
      sustain: sustains.ring.tick(:sustain),
      release: releases.ring.tick(:release)
    sleep rhythm.ring.tick(:rhythm)
  end
end

define :play_seqs_adsr do |notes, rhythm, attacks, decays, sustains, releases|
  play_seqs_ar_oa notes, rhythm, attacks, decays, sustains, releases, 0, 1
end

define :play_seqs_assr_oa do |notes, rhythm, attacks, sustains, sustain_levels, releases, offset, amp|
  notes.each do |i|
    play i+offset,
      amp: amp,
      attack: attacks.ring.tick(:attack),
      sustain: sustains.ring.tick(:sustain),
      sustain_level: sustain_levels.ring.tick(:sustain_level),
      release: releases.ring.tick(:release)
    sleep rhythm.ring.tick(:rhythm)
  end
end

define :play_seqs_assr do |notes, rhythm, attacks, sustains, sustain_levels, releases|
  play_seqs_ar_oa notes, rhythm, attacks, sustains, sustain_levels, releases, 0, 1
end

define :play_seqs_aadssr_oa do |notes, rhythm, attacks, attack_levels,
    decays, sustains, sustain_levels, releases, offset, amp|
  notes.each do |i|
    play i+offset,
      amp: amp,
      attack: attacks.ring.tick(:attack),
      attack_level: attack_levels.ring.tick(:attack_level),
      decay: decays.ring.rick(:decay),
      sustain: sustains.ring.tick(:sustain),
      sustain_level: sustain_levels.ring.tick(:sustain_level),
      release: releases.ring.tick(:release)
    sleep rhythm.ring.tick(:rhythm)
  end
end

define :play_seqs_aadssr do |notes, rhythm, attacks, attack_levels,
    decays, sustains, sustain_levels, releases|
  play_seqs_ar_oa notes, rhythm, attacks, attack_levels,
    decays, sustains, sustain_levels, releases, 0, 1
end

define :play_seqs_adssr_oa do |notes, rhythm, attacks, decays,
    sustains, sustain_levels, releases, offset, amp|
  notes.each do |i|
    play i+offset,
      amp: amp,
      attack: attacks.ring.tick(:attack),
      decay: decays.ring.rick(:decay),
      sustain: sustains.ring.tick(:sustain),
      sustain_level: sustain_levels.ring.tick(:sustain_level),
      release: releases.ring.tick(:release)
    sleep rhythm.ring.tick(:rhythm)
  end
end

define :play_seqs_adssr do |notes, rhythm, attacks, decays, sustains, sustain_levels, releases|
  play_seqs_ar_oa notes, rhythm, attacks, decays, sustains, sustain_levels, releases, 0, 1
end

define :play_seqs_aaddssr_oa do |notes, rhythm, attacks, attack_levels,
    decays, decay_levels, sustains, sustain_levels, releases, offset, amp|
  notes.each do |i|
    play i+offset,
      amp: amp,
      attack: attacks.ring.tick(:attack),
      attack_level: attack_levels.ring.tick(:attack_level),
      decay: decays.ring.rick(:decay),
      decay_level: decay_levels.ring.rick(:decay_level),
      sustain: sustains.ring.tick(:sustain),
      sustain_level: sustain_levels.ring.tick(:sustain_level),
      release: releases.ring.tick(:release)
    sleep rhythm.ring.tick(:rhythm)
  end
end

define :play_seqs_aaddssr do |notes, rhythm, attacks, attack_levels,
    decays, decay_levels, sustains, sustain_levels, releases|
  play_seqs_ar_oa notes, rhythm, attacks, attack_levels,
    decays, decay_levels, sustains, sustain_levels, releases, 0, 1
end

v = [[chord(:C4, :major7),  :G4,   :C4,   :F4,  :E4,  :D4],
     [0.25, 0.375, 0.125, 0.25, 0.25, 0.75],
     [0.05, 0.01],
     [0.25, 0.5,   0.25, 0.25, 0.3, 0.5]]

#play_seqs_ar v[0], v[1], v[2], v[3]

use_synth :beep
imperial = [[:A2, :A2, :A2, :A2, :A2, :A2, :B2, :C3, :D3, :E3, :A2],
            [0.25, 0.25, 0.25, 0.25, 1, 0.25, 0.25, 0.25, 0.25, 0.5, 1.5],
            [0.2, 0.2, 0.2, 0.2, 0.95, 0.2, 0.2, 0.2, 0.2, 0.2, 1.5]]

with_fx :reverb do
  play_seqs_r_oa imperial[0], imperial[1], imperial[2], 12, 1
end

